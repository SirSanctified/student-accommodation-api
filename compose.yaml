version: '3.9'

networks:
  student-accommodation:
    driver: bridge

services:
  client:
    container_name: client
    image: sirsanctified/roomio-client:latest
    build: ./client
    ports:
      - "3000:3000"
    env_file:
      - ./client/.env
    networks:
      - student-accommodation
    depends_on:
      - api
    develop:
      watch:
        - path: ./client
          action: sync
          target: /app
          ignore:
            - node_modules/
        - path: ./client/package.json
          action: rebuild
        - path: ./client/package-lock.json
          action: sync

  api:
    container_name: api
    image: sirsanctified/roomio-api:latest
    build:
      context: .
      dockerfile: ./backend/docker/django/server.dockerfile
    command: ./start.sh
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    networks:
      - student-accommodation
    env_file:
      - ./backend/.env
    depends_on:
      - db
      - redis
    develop:
      watch:
        - path: ./backend
          action: rebuild
          target: /accounts
          ignore:
            - venv/
        - path: ./backend
          action: rebuild
          target: /core
          ignore:
            - venv/
        - path: ./backend
          action: rebuild
          target: /student_accommodation
          ignore:
            - venv/
        - path: ./backend/requirement.txt
          action: rebuild
        
  db:
    container_name: db
    image: postgres
    ports:
      - "6543:5432"
    networks:
      - student-accommodation
    env_file:
      - ./backend/.env
    volumes:
      - pg_data:/var/lib/postgresql/

  pgadmin:
    container_name: pgadmin
    image: fenglc/pgadmin4
    ports:
      - "5050:5050"
    networks:
      - student-accommodation
    env_file:
      - ./backend/.env
    depends_on:
      - db
    
  redis:
    container_name: redis
    image: redis:7.2.4-alpine
    ports:
      - "6379:6379"
    networks:
      - student-accommodation
    
  celery_worker:
    container_name: celery_worker
    build:
      context: .
      dockerfile: ./backend/docker/django/server.dockerfile

    command: ./start-celeryworker.sh
    volumes:
      - .:/app
    networks:
      - student-accommodation
    env_file:
      - ./backend/.env
    depends_on:
      - db
      - redis

  flower:
    container_name: flower
    build:
      context: .
      dockerfile: ./backend/docker/django/server.dockerfile
    command: ./start-flower.sh
    ports:
      - "5555:5555"
    volumes:
      - .:/app
    networks:
      - student-accommodation
    env_file:
      - ./backend/.env
    depends_on:
      - redis
      - db

  nginx:
    restart: always
    container_name: nginx
    build:
      context: ./backend/docker/nginx
      dockerfile: nginx.dockerfile
    ports:
      - "8080:80"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    networks:
      - student-accommodation
    depends_on:
      - api

volumes:
  pg_data:
  static_volume:
  media_volume: